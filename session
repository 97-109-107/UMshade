let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
inoremap <C-Space> 
inoremap <expr> <S-Tab> pumvisible() ? "\" : "\<S-Tab>"
inoremap <F1> 
nmap v :call Screen_Vars()
nmap  vip
vmap  "ry :call Send_to_Screen(@r)
noremap  h
vnoremap 	 %
nnoremap 	 %
noremap <NL> j
noremap  k
noremap  l
vnoremap <silent>  :update
nnoremap <silent>  :update
onoremap <silent>  :update
vnoremap / /\v
nnoremap / /\v
nnoremap ; :
nmap <ca <Plug>NERDCommenterAltDelims
xmap <cu <Plug>NERDCommenterUncomment
nmap <cu <Plug>NERDCommenterUncomment
xmap <cb <Plug>NERDCommenterAlignBoth
nmap <cb <Plug>NERDCommenterAlignBoth
xmap <cl <Plug>NERDCommenterAlignLeft
nmap <cl <Plug>NERDCommenterAlignLeft
nmap <cA <Plug>NERDCommenterAppend
xmap <cy <Plug>NERDCommenterYank
nmap <cy <Plug>NERDCommenterYank
xmap <cs <Plug>NERDCommenterSexy
nmap <cs <Plug>NERDCommenterSexy
xmap <ci <Plug>NERDCommenterInvert
nmap <ci <Plug>NERDCommenterInvert
nmap <c$ <Plug>NERDCommenterToEOL
xmap <cn <Plug>NERDCommenterNested
nmap <cn <Plug>NERDCommenterNested
xmap <cm <Plug>NERDCommenterMinimal
nmap <cm <Plug>NERDCommenterMinimal
xmap <c  <Plug>NERDCommenterToggle
nmap <c  <Plug>NERDCommenterToggle
xmap <cc <Plug>NERDCommenterComment
nmap <cc <Plug>NERDCommenterComment
map <mq <Plug>MBEMarkCurrent
map <mbt <Plug>TMiniBufExplorer
map <mbu <Plug>UMiniBufExplorer
map <mbc <Plug>CMiniBufExplorer
map <mbe <Plug>MiniBufExplorer
vnoremap <silent> <w :call EasyMotion#WB(1, 0)
onoremap <silent> <w :call EasyMotion#WB(0, 0)
nnoremap <silent> <w :call EasyMotion#WB(0, 0)
vnoremap <silent> <t :call EasyMotion#T(1, 0)
onoremap <silent> <t :call EasyMotion#T(0, 0)
nnoremap <silent> <t :call EasyMotion#T(0, 0)
onoremap <silent> <n :call EasyMotion#Search(0, 0)
nnoremap <silent> <n :call EasyMotion#Search(0, 0)
vnoremap <silent> <k :call EasyMotion#JK(1, 1)
onoremap <silent> <k :call EasyMotion#JK(0, 1)
nnoremap <silent> <k :call EasyMotion#JK(0, 1)
vnoremap <silent> <j :call EasyMotion#JK(1, 0)
onoremap <silent> <j :call EasyMotion#JK(0, 0)
vnoremap <silent> <gE :call EasyMotion#EW(1, 1)
onoremap <silent> <gE :call EasyMotion#EW(0, 1)
nnoremap <silent> <gE :call EasyMotion#EW(0, 1)
vnoremap <silent> <f :call EasyMotion#F(1, 0)
onoremap <silent> <f :call EasyMotion#F(0, 0)
nnoremap <silent> <f :call EasyMotion#F(0, 0)
vnoremap <silent> <e :call EasyMotion#E(1, 0)
onoremap <silent> <e :call EasyMotion#E(0, 0)
nnoremap <silent> <e :call EasyMotion#E(0, 0)
vnoremap <silent> <b :call EasyMotion#WB(1, 1)
onoremap <silent> <b :call EasyMotion#WB(0, 1)
nnoremap <silent> <b :call EasyMotion#WB(0, 1)
vnoremap <silent> <W :call EasyMotion#WBW(1, 0)
onoremap <silent> <W :call EasyMotion#WBW(0, 0)
vnoremap <silent> <T :call EasyMotion#T(1, 1)
onoremap <silent> <T :call EasyMotion#T(0, 1)
nnoremap <silent> <T :call EasyMotion#T(0, 1)
vnoremap <silent> <N :call EasyMotion#Search(1, 1)
onoremap <silent> <N :call EasyMotion#Search(0, 1)
nnoremap <silent> <N :call EasyMotion#Search(0, 1)
vnoremap <silent> <ge :call EasyMotion#E(1, 1)
onoremap <silent> <ge :call EasyMotion#E(0, 1)
nnoremap <silent> <ge :call EasyMotion#E(0, 1)
vnoremap <silent> <F :call EasyMotion#F(1, 1)
onoremap <silent> <F :call EasyMotion#F(0, 1)
nnoremap <silent> <F :call EasyMotion#F(0, 1)
vnoremap <silent> <E :call EasyMotion#EW(1, 0)
onoremap <silent> <E :call EasyMotion#EW(0, 0)
nnoremap <silent> <E :call EasyMotion#EW(0, 0)
vnoremap <silent> <B :call EasyMotion#WBW(1, 1)
onoremap <silent> <B :call EasyMotion#WBW(0, 1)
nnoremap <silent> <B :call EasyMotion#WBW(0, 1)
nmap <l :TagbarToggle
nnoremap <silent> <j :call EasyMotion#JK(0, 0)
vnoremap <silent> <n :call EasyMotion#Search(1, 0)
nnoremap <ev :e $MYVIMRC
nnoremap <v V`]
nnoremap <q gqip
nnoremap <ft vatzf
nnoremap <silent> <W :call EasyMotion#WBW(0, 0)
nnoremap <  :noh
nmap gx <Plug>NetrwBrowseX
nnoremap g; g;zz
nnoremap j gj
nnoremap k gk
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)
nnoremap <silent> <F11> :call conque_term#exec_file()
xnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment("x", "Uncomment")
nnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment("n", "Uncomment")
xnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment("x", "AlignBoth")
nnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment("n", "AlignBoth")
xnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment("x", "AlignLeft")
nnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment("n", "AlignLeft")
nnoremap <silent> <Plug>NERDCommenterAppend :call NERDComment("n", "Append")
xnoremap <silent> <Plug>NERDCommenterYank :call NERDComment("x", "Yank")
nnoremap <silent> <Plug>NERDCommenterYank :call NERDComment("n", "Yank")
xnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment("x", "Sexy")
nnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment("n", "Sexy")
xnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment("x", "Invert")
nnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment("n", "Invert")
nnoremap <silent> <Plug>NERDCommenterToEOL :call NERDComment("n", "ToEOL")
xnoremap <silent> <Plug>NERDCommenterNested :call NERDComment("x", "Nested")
nnoremap <silent> <Plug>NERDCommenterNested :call NERDComment("n", "Nested")
xnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment("x", "Minimal")
nnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment("n", "Minimal")
xnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment("x", "Toggle")
nnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment("n", "Toggle")
xnoremap <silent> <Plug>NERDCommenterComment :call NERDComment("x", "Comment")
nnoremap <silent> <Plug>NERDCommenterComment :call NERDComment("n", "Comment")
noremap <C-Right> l
noremap <C-Left> h
noremap <C-Up> k
noremap <C-Down> j
vnoremap <F1> 
nnoremap <F1> 
nnoremap <Right> <Nop>
nnoremap <Left> <Nop>
nnoremap <Down> <Nop>
nnoremap <Up> <Nop>
nnoremap <F3> :set hlsearch!
inoremap <expr> 	 pumvisible() ? "\" : "\	"
inoremap <silent>  :update
imap <l :TagbarTogglei
imap <j :RopeGotoDefinition
inoremap jj 
let &cpo=s:cpo_save
unlet s:cpo_save
set autoindent
set background=dark
set backspace=indent,eol,start
set backupskip=/tmp/*,/private/tmp/*
set clipboard=unnamedplus
set completefunc=youcompleteme#Complete
set completeopt=preview,menuone
set copyindent
set dictionary=/usr/share/dict/words
set noequalalways
set expandtab
set fileencodings=ucs-bom,utf-8,default,latin1
set formatoptions=qrn1
set gdefault
set guifont=Anonymous\ Pro\ 9
set guioptions=egitam
set guitablabel=%-0.12t%M
set helplang=en
set hidden
set ignorecase
set incsearch
set laststatus=2
set lazyredraw
set listchars=tab:â–¸\ ,eol:Â¬
set matchtime=3
set modelines=0
set mouse=a
set pastetoggle=<F3>
set preserveindent
set ruler
set runtimepath=~/.vim/bundle/vundle,~/.vim/bundle/vim-easymotion,~/.vim/bundle/YouCompleteMe,~/.vim/bundle/nerdtree,~/.vim/bundle/Command-T,~/.vim/bundle/minibufexpl.vim,~/.vim/bundle/vim-nerdtree-tabs,~/.vim/bundle/vim-session,~/.vim/bundle/nerdcommenter,~/.vim/bundle/command-t,~/.vim/bundle/vim-autoclose,~/.vim/bundle/headlights,~/.vim,/usr/local/share/vim/vimfiles,/usr/local/share/vim/vim73,/usr/local/share/vim/vimfiles/after,~/.vim/after,~/.vim/bundle/vundle/,~/.vim/bundle/vundle/after,~/.vim/bundle/vim-easymotion/after,~/.vim/bundle/YouCompleteMe/after,~/.vim/bundle/nerdtree/after,~/.vim/bundle/Command-T/after,~/.vim/bundle/minibufexpl.vim/after,~/.vim/bundle/vim-nerdtree-tabs/after,~/.vim/bundle/vim-session/after,~/.vim/bundle/nerdcommenter/after,~/.vim/bundle/command-t/after,~/.vim/bundle/vim-autoclose/after,~/.vim/bundle/headlights/after
set scrolloff=3
set shiftwidth=4
set showcmd
set showmatch
set smartcase
set softtabstop=4
set tabstop=4
set termencoding=utf-8
set textwidth=79
set title
set updatetime=2000
set visualbell
set wildignore=.hg,.git,.svn,*.aux,*.out,*.toc,*.jpg,*.bmp,*.gif,*.png,*.jpeg,*.o,*.obj,*.exe,*.dll,*.manifest,*.spl,*.sw?,*.DS_Store,*.luac,migrations,*.pyc,*.orig
set wildmenu
set wildmode=list:longest
set window=55
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +2 Programming/repos/UMshade/js/background.js
badd +1 Programming/repos/UMshade/js/content_script.js
badd +1 Programming/repos/UMshade/js/localstorage.js
badd +1 Programming/repos/UMshade/js/umshade.js
silent! argdel *
edit Programming/repos/UMshade/js/umshade.js
set splitbelow splitright
wincmd _ | wincmd |
split
1wincmd k
wincmd w
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe '1resize ' . ((&lines * 1 + 28) / 56)
exe '2resize ' . ((&lines * 52 + 28) / 56)
exe 'vert 2resize ' . ((&columns * 31 + 55) / 110)
exe '3resize ' . ((&lines * 52 + 28) / 56)
exe 'vert 3resize ' . ((&columns * 78 + 55) / 110)
argglobal
enew
file -MiniBufExplorer-
let s:cpo_save=&cpo
set cpo&vim
nnoremap <buffer> 	 :call search('\[[0-9]*:[^\]]*\]'):<BS>
nnoremap <buffer> h :call search('\[[0-9]*:[^\]]*\]','b'):<BS>
nnoremap <buffer> j gj
nnoremap <buffer> k gk
nnoremap <buffer> l :call search('\[[0-9]*:[^\]]*\]'):<BS>
nnoremap <buffer> p :wincmd p:<BS>
nnoremap <buffer> <S-Tab> :call search('\[[0-9]*:[^\]]*\]','b'):<BS>
nnoremap <buffer> <Up> gk
nnoremap <buffer> <Down> gj
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=delete
setlocal nobuflisted
setlocal buftype=nofile
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i
setlocal completefunc=youcompleteme#Complete
setlocal copyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != ''
setlocal filetype=
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=qrn1
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=
setlocal modeline
setlocal nomodifiable
setlocal nrformats=octal,hex
setlocal nonumber
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal preserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%!g:statusLineText
setlocal suffixesadd=
setlocal noswapfile
setlocal synmaxcol=3000
if &syntax != ''
setlocal syntax=
endif
setlocal tabstop=4
setlocal tags=
setlocal textwidth=79
setlocal thesaurus=
setlocal noundofile
setlocal winfixheight
setlocal winfixwidth
setlocal wrap
setlocal wrapmargin=0
wincmd w
argglobal
enew
file NERD_tree_1
xnoremap <buffer> <silent> <a} `>a}`<i{
xnoremap <buffer> <silent> <a{ `>a}`<i{
xnoremap <buffer> <silent> <a) `>a)`<i(
xnoremap <buffer> <silent> <a( `>a)`<i(
xnoremap <buffer> <silent> <a' `>a'`<i'
xnoremap <buffer> <silent> <a] `>a]`<i[
xnoremap <buffer> <silent> <a[ `>a]`<i[
xnoremap <buffer> <silent> <a" `>a"`<i"
xnoremap <buffer> <silent> <a` `>a``<i`
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=hide
setlocal nobuflisted
setlocal buftype=nofile
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i
setlocal completefunc=youcompleteme#Complete
setlocal copyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal cursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'nerdtree'
setlocal filetype=nerdtree
endif
setlocal foldcolumn=0
setlocal nofoldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=qrn1
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=0
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal nomodifiable
setlocal nrformats=octal,hex
setlocal nonumber
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal preserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}
setlocal suffixesadd=
setlocal noswapfile
setlocal synmaxcol=3000
if &syntax != 'nerdtree'
setlocal syntax=nerdtree
endif
setlocal tabstop=4
setlocal tags=
setlocal textwidth=79
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal winfixwidth
setlocal nowrap
setlocal wrapmargin=0
wincmd w
argglobal
xnoremap <buffer> <silent> <a} `>a}`<i{
xnoremap <buffer> <silent> <a{ `>a}`<i{
xnoremap <buffer> <silent> <a) `>a)`<i(
xnoremap <buffer> <silent> <a( `>a)`<i(
xnoremap <buffer> <silent> <a' `>a'`<i'
xnoremap <buffer> <silent> <a] `>a]`<i[
xnoremap <buffer> <silent> <a[ `>a]`<i[
xnoremap <buffer> <silent> <a" `>a"`<i"
xnoremap <buffer> <silent> <a` `>a``<i`
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal cindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=j1,J1
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=sO:*\ -,mO:*\ \ ,exO:*/,s1:/*,mb:*,ex:*/,://
setlocal commentstring=//%s
setlocal complete=.,w,b,u,t,i
setlocal completefunc=youcompleteme#Complete
setlocal copyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'javascript'
setlocal filetype=javascript
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=n1croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
setlocal nonumber
setlocal numberwidth=4
setlocal omnifunc=javascriptcomplete#CompleteJS
setlocal path=
setlocal preserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'javascript'
setlocal syntax=javascript
endif
setlocal tabstop=4
setlocal tags=
setlocal textwidth=79
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
silent! normal! zE
let s:l = 35 - ((34 * winheight(0) + 26) / 52)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
35
normal! 019l
wincmd w
3wincmd w
exe '1resize ' . ((&lines * 1 + 28) / 56)
exe '2resize ' . ((&lines * 52 + 28) / 56)
exe 'vert 2resize ' . ((&columns * 31 + 55) / 110)
exe '3resize ' . ((&lines * 52 + 28) / 56)
exe 'vert 3resize ' . ((&columns * 78 + 55) / 110)
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
